{
  "version": 3,
  "sources": ["../cruip-js-toolkit/lib/focusHandling.js"],
  "sourcesContent": ["export const focusHandling = (prop = null) => {\r\n    // make focus ring visible only for keyboard navigation\r\n    const focusEls = document.querySelectorAll('a, button, input, select, textarea, label, .form-switch, [tabindex]');\r\n    const resetFocusEls = (bool) => {\r\n        const outlineStyle = bool ? '' : 'none';\r\n        focusEls.forEach((focusTab) => {\r\n            (!prop || prop === 'outline') && focusTab.style.setProperty('outline', outlineStyle);\r\n            (!prop || prop === 'box-shadow') && focusTab.style.setProperty('box-shadow', outlineStyle);\r\n        });\r\n    };\r\n    const detectClick = () => {\r\n        if (focusEls.length > 0) {\r\n            resetFocusEls(false);\r\n            // eslint-disable-next-line no-use-before-define\r\n            window.addEventListener('keydown', detectTab);\r\n        }\r\n        window.removeEventListener('mousedown', detectClick);\r\n    };\r\n    const detectTab = (event) => {\r\n        if (event.keyCode !== 9)\r\n            return;\r\n        resetFocusEls(true);\r\n        window.removeEventListener('keydown', detectTab);\r\n        window.addEventListener('mousedown', detectClick);\r\n    };\r\n    window.addEventListener('mousedown', detectClick);\r\n};\r\n"],
  "mappings": ";;;AAAO,IAAM,gBAAgB,CAAC,OAAO,SAAS;AAE1C,QAAM,WAAW,SAAS,iBAAiB;AAC3C,QAAM,gBAAgB,CAAC,SAAS;AAC5B,UAAM,eAAe,OAAO,KAAK;AACjC,aAAS,QAAQ,CAAC,aAAa;AAC3B,MAAC,EAAC,QAAQ,SAAS,cAAc,SAAS,MAAM,YAAY,WAAW;AACvE,MAAC,EAAC,QAAQ,SAAS,iBAAiB,SAAS,MAAM,YAAY,cAAc;AAAA;AAAA;AAGrF,QAAM,cAAc,MAAM;AACtB,QAAI,SAAS,SAAS,GAAG;AACrB,oBAAc;AAEd,aAAO,iBAAiB,WAAW;AAAA;AAEvC,WAAO,oBAAoB,aAAa;AAAA;AAE5C,QAAM,YAAY,CAAC,UAAU;AACzB,QAAI,MAAM,YAAY;AAClB;AACJ,kBAAc;AACd,WAAO,oBAAoB,WAAW;AACtC,WAAO,iBAAiB,aAAa;AAAA;AAEzC,SAAO,iBAAiB,aAAa;AAAA;",
  "names": []
}
