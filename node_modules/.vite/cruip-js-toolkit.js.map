{
  "version": 3,
  "sources": ["../cruip-js-toolkit/lib/focusHandling.js"],
  "sourcesContent": ["export const focusHandling = (prop = null) => {\n    // make focus ring visible only for keyboard navigation\n    const focusEls = document.querySelectorAll('a, button, input, select, textarea, label, .form-switch, [tabindex]');\n    const resetFocusEls = (bool) => {\n        const outlineStyle = bool ? '' : 'none';\n        focusEls.forEach((focusTab) => {\n            (!prop || prop === 'outline') && focusTab.style.setProperty('outline', outlineStyle);\n            (!prop || prop === 'box-shadow') && focusTab.style.setProperty('box-shadow', outlineStyle);\n        });\n    };\n    const detectClick = () => {\n        if (focusEls.length > 0) {\n            resetFocusEls(false);\n            // eslint-disable-next-line no-use-before-define\n            window.addEventListener('keydown', detectTab);\n        }\n        window.removeEventListener('mousedown', detectClick);\n    };\n    const detectTab = (event) => {\n        if (event.keyCode !== 9)\n            return;\n        resetFocusEls(true);\n        window.removeEventListener('keydown', detectTab);\n        window.addEventListener('mousedown', detectClick);\n    };\n    window.addEventListener('mousedown', detectClick);\n};\n"],
  "mappings": ";;;AAAO,IAAM,gBAAgB,CAAC,OAAO,SAAS;AAE1C,QAAM,WAAW,SAAS,iBAAiB;AAC3C,QAAM,gBAAgB,CAAC,SAAS;AAC5B,UAAM,eAAe,OAAO,KAAK;AACjC,aAAS,QAAQ,CAAC,aAAa;AAC3B,MAAC,EAAC,QAAQ,SAAS,cAAc,SAAS,MAAM,YAAY,WAAW;AACvE,MAAC,EAAC,QAAQ,SAAS,iBAAiB,SAAS,MAAM,YAAY,cAAc;AAAA;AAAA;AAGrF,QAAM,cAAc,MAAM;AACtB,QAAI,SAAS,SAAS,GAAG;AACrB,oBAAc;AAEd,aAAO,iBAAiB,WAAW;AAAA;AAEvC,WAAO,oBAAoB,aAAa;AAAA;AAE5C,QAAM,YAAY,CAAC,UAAU;AACzB,QAAI,MAAM,YAAY;AAClB;AACJ,kBAAc;AACd,WAAO,oBAAoB,WAAW;AACtC,WAAO,iBAAiB,aAAa;AAAA;AAEzC,SAAO,iBAAiB,aAAa;AAAA;",
  "names": []
}
